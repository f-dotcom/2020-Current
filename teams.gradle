// Included by team projects (:4788)

apply plugin: 'cpp'
apply plugin: 'google-test-test-suite'
apply plugin: 'edu.wpi.first.GradleRIO'

deploy {
  targets {
    roboRIO('roborio') {
      team = frc.getTeamNumber()
    }
  }

  artifacts {
    frcNativeArtifact('frcCpp') {
      targets << 'roborio'
      component = "frcUserProgram"
      // Debug can be overridden by command line, for use with VSCode (with -PdebugMode)
      debug = frc.getDebugOrDefault(false)
    }
    fileTreeArtifact('frcStaticFileDeploy') {
      files = fileTree(dir: 'src/main/deploy')
      // Deploy to RoboRIO target, into /home/lvuser/deploy
      targets << 'roborio'
      directory = '/home/lvuser/deploy'
    }
  }
}

def includeSrcInIncludeRoot = false

// Set this to true to enable desktop support.
def includeDesktopSupport = false

dependencies {
  simulation wpi.deps.sim.gui(wpi.platforms.desktop, true)
}


//wpi.deps.vendor.loadFrom(project(':wml'))

model {
  components {
    frcUserProgram(NativeExecutableSpec) {
      targetPlatform wpi.platforms.roborio
      if (includeDesktopSupport) {
        targetPlatform wpi.platforms.desktop
      }

      sources.cpp {
        source {
          srcDir 'src/main/cpp'
          srcDir rootProject.file('wml/src/main/cpp')
          include '**/*.cpp', '**/*.cc'
        }
        exportedHeaders {
          srcDir 'src/main/include'
          srcDir rootProject.file('wml/src/main/include')
          if (includeSrcInIncludeRoot) {
            srcDir 'src/main/cpp'
            srcDir rootProject.file('wml/src/main/cpp')
          }
        }
      }

      // binaries.all {
      //   lib project: ':common', library: 'curtinFrcCommon', linkage: 'static'
      //   lib project: ':wml', library: 'wml', linkage: 'static'
      // }

      // useLibrary(it, "wpilib")
      wpi.deps.wpilib(it)
      wpi.deps.vendor.cpp(it)
    }
  }

  testSuites {
    frcUserProgramTest(GoogleTestTestSuiteSpec) {
      testing $.components.frcUserProgram

      sources.cpp {
        source {
          srcDir 'src/test/cpp'
          include '**/*.cpp'
        }
      }

      // binaries.all {
      //     lib project: ':wml', library: 'wml', linkage: 'static'
      // }

      wpi.deps.wpilib(it)
      wpi.deps.googleTest(it)
      wpi.deps.vendor.cpp(it)
    }
  }
}

// task "sim${project.name}"(dependsOn: "simulateFrcUserProgram${project.name}${wpi.platforms.desktop.capitalize()}DebugExecutable")

// if (!project.hasProperty('no-common-check'))
//   tasks.check.dependsOn(':common:check')

// if (!project.hasProperty('no-wml-check'))
//   tasks.check.dependsOn(':wml:check') 
